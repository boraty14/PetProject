local floor_height = -280
local ceiling_height = 450
local speed = 1000

function init(self)
	-- Let the script receive input from the player
	msg.post(".", "acquire_input_focus")

	self.system_name = sys.get_sys_info().system_name
	self.velocity = vmath.vector3()
	self.direction = 0

	-- Animate the ship so it's swaying back and forth
	go.set(".", "euler.z", -5)
	go.animate(".", "euler.z", go.PLAYBACK_LOOP_PINGPONG, 5, go.EASING_INOUTSINE, 2)
	
end

function update(self, dt)
	local p = go.get_position()
	if self.direction == 0 then
		return nil
	end
	
	local acceleration = vmath.vector3(0, 1, 0) * speed * self.direction 
	local dv = acceleration * dt
	local v0 = self.velocity
	local v1 = self.velocity + dv
	local movement = (0.5 * v0 + 0.5 * v1) * dt
	
	if p.y + movement.y > ceiling_height then
		self.velocity = vmath.vector3()
		return nil
	end
	
	self.velocity = v1  

	if p.y + movement.y <= floor_height + 0.1 and self.direction == -1 then
		p.y = floor_height
		movement.y = 0
		msg.post("#sprite", "play_animation", {id = hash("walk")})
		self.velocity = vmath.vector3()
		self.direction = 0
	end
	--print(movement)
	go.set_position(p + movement)
end

function on_input(self, action_id, action)
	local p = go.get_position()
	if action_id == hash("touch") and action.pressed and self.direction == 0 then
		print("Touch!")
		msg.post("#sprite", "play_animation", {id = hash("jump")})
		self.direction = 1
	elseif action_id == hash("touch") and action.released and self.direction == 1 then
		self.direction = -1
	end

end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		--msg.post("main#gui", "add_score", {amount = score})
		if self.system_name == "Android" then
			vibrate.vibrate(50)
		elseif self.system_name == "iPhone OS" and taptic_engine and taptic_engine.isSupported() then
			taptic_engine.impact(taptic_engine.IMPACT_MEDIUM)
		end
	end
end

